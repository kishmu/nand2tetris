@256  // bootstrap
D=A 
@SP 
M=D 
@Main$ret  // call Sys.init 0
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@5 
D=-A 
@0 
D=D-A 
@SP 
D=D+M 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Sys.init 
0;JMP 
@0  (Main$ret) // function Class1.set 0 // label undefined (Class1.set) // push argument 0
D=A 
@ARG 
A=D+M 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP  // pop static 0
AM=M-1 
D=M 
@Class1.0 
M=D 
@1  // push argument 1
D=A 
@ARG 
A=D+M 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP  // pop static 1
AM=M-1 
D=M 
@Class1.1 
M=D 
@0  // push constant 0
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL  // return from Class1.set
D=M 
@FRAME 
M=D 
@5 
A=D-A 
D=M 
@RET 
M=D 
@SP 
AM=M-1 
D=M 
@ARG 
A=M 
M=D 
@ARG 
D=M+1 
@SP 
M=D 
@FRAME 
A=M-1 
D=M 
@THAT 
M=D 
@2 
D=A 
@FRAME 
A=M-D 
D=M 
@THIS 
M=D 
@3 
D=A 
@FRAME 
A=M-D 
D=M 
@ARG 
M=D 
@4 
D=A 
@FRAME 
A=M-D 
D=M 
@LCL 
M=D 
@RET 
A=M 
0;JMP 
@Class1.0  // function Class1.get 0 // label undefined (Class1.get) // push static 0
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@Class1.1  // push static 1
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP  // sub
AM=M-1 
D=M 
@SP 
AM=M-1 
M=M-D 
@SP 
M=M+1 
@LCL  // return from Class1.get
D=M 
@FRAME 
M=D 
@5 
A=D-A 
D=M 
@RET 
M=D 
@SP 
AM=M-1 
D=M 
@ARG 
A=M 
M=D 
@ARG 
D=M+1 
@SP 
M=D 
@FRAME 
A=M-1 
D=M 
@THAT 
M=D 
@2 
D=A 
@FRAME 
A=M-D 
D=M 
@THIS 
M=D 
@3 
D=A 
@FRAME 
A=M-D 
D=M 
@ARG 
M=D 
@4 
D=A 
@FRAME 
A=M-D 
D=M 
@LCL 
M=D 
@RET 
A=M 
0;JMP 
@0  // function Class2.set 0 // label undefined (Class2.set) // push argument 0
D=A 
@ARG 
A=D+M 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP  // pop static 0
AM=M-1 
D=M 
@Class2.0 
M=D 
@1  // push argument 1
D=A 
@ARG 
A=D+M 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP  // pop static 1
AM=M-1 
D=M 
@Class2.1 
M=D 
@0  // push constant 0
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL  // return from Class2.set
D=M 
@FRAME 
M=D 
@5 
A=D-A 
D=M 
@RET 
M=D 
@SP 
AM=M-1 
D=M 
@ARG 
A=M 
M=D 
@ARG 
D=M+1 
@SP 
M=D 
@FRAME 
A=M-1 
D=M 
@THAT 
M=D 
@2 
D=A 
@FRAME 
A=M-D 
D=M 
@THIS 
M=D 
@3 
D=A 
@FRAME 
A=M-D 
D=M 
@ARG 
M=D 
@4 
D=A 
@FRAME 
A=M-D 
D=M 
@LCL 
M=D 
@RET 
A=M 
0;JMP 
@Class2.0  // function Class2.get 0 // label undefined (Class2.get) // push static 0
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@Class2.1  // push static 1
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP  // sub
AM=M-1 
D=M 
@SP 
AM=M-1 
M=M-D 
@SP 
M=M+1 
@LCL  // return from Class2.get
D=M 
@FRAME 
M=D 
@5 
A=D-A 
D=M 
@RET 
M=D 
@SP 
AM=M-1 
D=M 
@ARG 
A=M 
M=D 
@ARG 
D=M+1 
@SP 
M=D 
@FRAME 
A=M-1 
D=M 
@THAT 
M=D 
@2 
D=A 
@FRAME 
A=M-D 
D=M 
@THIS 
M=D 
@3 
D=A 
@FRAME 
A=M-D 
D=M 
@ARG 
M=D 
@4 
D=A 
@FRAME 
A=M-D 
D=M 
@LCL 
M=D 
@RET 
A=M 
0;JMP 
@6  // function Sys.init 0 // label undefined (Sys.init) // push constant 6
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@8  // push constant 8
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@Sys.init$ret  // call Class1.set 2
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@5 
D=-A 
@2 
D=D-A 
@SP 
D=D+M 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Class1.set 
0;JMP 
@SP  (Sys.init$ret) // pop temp 0
AM=M-1 
D=M 
@R5 
M=D 
@23  // push constant 23
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@15  // push constant 15
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@Sys.init$ret1  // call Class2.set 2
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@5 
D=-A 
@2 
D=D-A 
@SP 
D=D+M 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Class2.set 
0;JMP 
@SP  (Sys.init$ret1) // pop temp 0
AM=M-1 
D=M 
@R5 
M=D 
@Sys.init$ret2  // call Class1.get 0
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@5 
D=-A 
@0 
D=D-A 
@SP 
D=D+M 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Class1.get 
0;JMP 
@Sys.init$ret3  (Sys.init$ret2) // call Class2.get 0
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@5 
D=-A 
@0 
D=D-A 
@SP 
D=D+M 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Class2.get 
0;JMP 
@Sys.init$WHILE  (Sys.init$ret3) // label WHILE (Sys.init$WHILE) // goto WHILE
0;JMP 