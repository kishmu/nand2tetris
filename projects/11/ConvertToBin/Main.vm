function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 1
neg
pop local 2
label LOOP_0
push local 2
not
if-goto END_LOOP_1
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
not
if-goto ELSE_2
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto ELSE_3
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto END_IF_4
label ELSE_3
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label END_IF_4
goto END_IF_5
label ELSE_2
push constant 0
pop local 2
label END_IF_5
goto LOOP_0
label END_LOOP_1
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto ELSE_6
push constant 1
return
goto END_IF_7
label ELSE_6
push argument 0
push constant 2
call Math.multiply 2
return
label END_IF_7
function Main.fillMemory 0
label LOOP_8
push argument 1
push constant 0
gt
not
if-goto END_LOOP_9
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto LOOP_8
label END_LOOP_9
push constant 0
return